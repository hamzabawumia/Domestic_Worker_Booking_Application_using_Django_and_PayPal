-------------------OTP.html--------------------------------
{% load static %}
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
		<!-- Bootstrap CSS -->
		<link
			rel="stylesheet"
			href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
			integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2"
			crossorigin="anonymous"
		/>
		<title>Book our Services</title>
		<style type="text/css">
			/*custom font*/
			@import url(https://fonts.googleapis.com/css?family=Montserrat);

			/*basic reset*/
			* {
				margin: 0;
				padding: 0;
			}

			html {
				height: 220%;
				/*Image only BG fallback*/

				/*background = gradient + image pattern combo*/
				/* background: 
   linear-gradient(rgba(196, 102, 0, 0.6), rgba(155, 89, 182, 0.6)); */
				/*  background-repeat: no-repeat;*/
			}

			body {
				font-family: montserrat, arial, verdana;
				background: rgb(253, 246, 249);
				background: radial-gradient(
					circle,
					rgba(253, 246, 249, 0.7234244039412641) 0%,
					rgba(98, 95, 141, 1) 100%
				);
			}
			/*form styles*/
			#msform {
				width: 800px;
				margin: 50px auto;
				text-align: center;
				position: relative;
			}
			.input_text {
				text-align: left;
				padding-top: 10px;
			}
			fieldset {
				background: white;
				border: 0 none;
				border-radius: 3px;
				box-shadow: 0 0 15px 1px rgba(0, 0, 0, 0.4);
				padding: 20px 30px;
				box-sizing: border-box;
				width: 80%;
				margin: 0 10%;

				/*stacking fieldsets above each other*/
				position: relative;
			}
			@media screen and (max-width: 960px) {
				#msform {
					width: 600px;
				}
			}
			@media screen and (max-width: 556px) {
				#msform {
					width: 400px;
				}
			}
			@media screen and (max-width: 400px) {
				#msform {
					width: 380px;
				}
			}
			/*Hide all except first fieldset*/
			#msform fieldset:not(:first-of-type) {
				display: none;
			}
			/*inputs*/
			#msform input,
			select,
			textarea,
			#msform textarea {
				padding: 15px;
				border: 1px solid #ccc;
				border-radius: 3px;
				margin-bottom: 10px;
				width: 100%;
				box-sizing: border-box;
				font-family: montserrat;
				color: #2c3e50;
				font-size: 13px;
			}
			/*buttons*/
			#msform .action-button {
				width: 100px;
				background: #27ae60;
				font-weight: bold;
				color: white;
				border: 0 none;
				border-radius: 1px;
				cursor: pointer;
				padding: 10px 5px;
				margin: 10px 5px;
			}
			#msform .action-button:hover,
			#msform .action-button:focus {
				box-shadow: 0 0 0 2px white, 0 0 0 3px #27ae60;
			}
			/*headings*/
			.fs-title {
				font-size: 15px;
				text-transform: uppercase;
				color: #2c3e50;
				margin-bottom: 10px;
				font-weight: bold;
			}
			.fs-subtitle {
				font-weight: bold;
				font-size: 13px;
				color: #666;
				margin-bottom: 20px;
			}

			/*progressbar connectors*/

			/*marking active/completed steps green*/
			/*The number of the step and the connector before it = green*/

			.required {
				color: red;
			}
		</style>
	</head>
	<body>
		<!-- multistep form -->
		{% if messages %} {% for message in messages %}
		<div class="alert alert-{{ message.tags }} alert-dismissible fade show" role="alert">
			{{ message }}
			<button type="button" class="close" data-dismiss="alert" aria-label="Close">
				<span aria-hidden="true">&times;</span>
			</button>
		</div>
		{% endfor %} {% endif %}
		<form id="msform" action="store" method="POST">
			{% csrf_token %}
			<!-- progressbar 
  <ul id="progressbar">
    <li class="active">Account Setup</li>
    <li >Your Priority</li>
    <li>Personal Details</li>
</ul>
   fieldsets -->
           
			<fieldset>
				<h2 class="fs-title">Account Info</h2>

				<p class="input_text">Enter the OTP<span class="required">*</span> :</p>
				<input type="text" name="text" placeholder="OTP" required />
		

				<input
					type="submit"
					name="submit"
		
					id="submit"
					class="submit action-button"
					value="Submit"
				/>
			</fieldset>
		</form>

		<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
		<script
			type="text/javascript"
			src="https://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.3/jquery.easing.min.js"
		></script>
		<script
			src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
			integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
			crossorigin="anonymous"
		></script>
		<script
			src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"
			integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx"
			crossorigin="anonymous"
		></script>
	
	</body>
</html>
----------------------url--------------------------
path('OTP', views.otp_verify, name="otp_verify"),

-------------------view----------------------

import http.client
# Create your views here.

import requests
import ast
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import permissions, status, generics

from django.shortcuts import get_object_or_404, redirect
import random


from rest_framework.authentication import SessionAuthentication, BasicAuthentication
from rest_framework.permissions import IsAuthenticated

def store(request):
    data = cartData(request)
    cartItems = data['cartItems']

    products = Product.objects.all()
    context = {'products': products, 'cartItems': cartItems}
    if request.method == 'POST':
        otp = request.POST.get('text')
        if int(otp) == key:
            messages.success(request, 'Your Form Has Been Submitted.')
            return render(request, 'store.html', context)
        else:
            messages.success(request, 'Wrong OTP!!!')
            return render(request, 'ref.html')

def otp_verify(request):
    global key
    # phone_number = request.data.get('mobile_no')
    if request.method == 'POST':
        email = request.POST.get('email')
        phone_number = request.POST.get('mobile_no')
        location = request.POST.get('location')
        category = request.POST.get('category')
        work_hour = request.POST.get('work_hour')
        gender_preference = request.POST.get('gender_preference')
        total_people = request.POST.get('total_people')
        house_size = request.POST.get('house_size')
        budget = request.POST.get('budget')
        comment = request.POST.get('comment')
        f_name = request.POST.get('f_name')
        l_name = request.POST.get('l_name')
        address = request.POST.get('address')
        zipcode = request.POST.get('zipcode')
        booking = BookingDetails(email=email, mobile_no=phone_number, location=location, category=category, work_hour=work_hour, gender_preference=gender_preference,
                                 total_people=total_people, house_size=house_size, budget=budget, comment=comment,
                                 f_name=f_name, l_name=l_name, address=address, zipcode=zipcode)
        #phone_number = request.POST.get('mobile_no')
        booking.save()
        phone = str(phone_number)
        key = send_otp(phone)
        return render(request, 'OTP.html')

global key


def send_otp(phone):
    """
    This is an helper function to send otp to session stored phones or
    passed phone number as argument.
    """

    if phone:

        # key = otp_generator()
        key = random.randint(999, 9999)
        phone = str(phone)
        otp_key = str(key)

        link = f'https://2factor.in/API/R1/?module=TRANS_SMS&apikey=563027b1-291e-11eb-83d4-0200cd936042&to={phone}&from=ABCDEZ&templatename=Harsh&var1={phone}&var2={otp_key}'

        result = requests.get(link, verify=False)
        print("***********")
        print(result)
        print("***********")
        return key
    else:
        return False